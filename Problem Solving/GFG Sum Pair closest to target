class Solution {
    public List<Integer> sumClosest(int[] arr, int target) {
        
        if (arr.length < 2) return new ArrayList<>();

        Arrays.sort(arr);

        int minDiff = Integer.MAX_VALUE;

        int i = 0;
        int j = arr.length - 1;
        List<Integer> result = new ArrayList<>();

        while (i < j) {

            int sum = arr[i] + arr[j];

            int diff = Math.abs(target - sum);

            if (diff < minDiff) {
                minDiff = diff;
                result = List.of(arr[i], arr[j]);
            } else if (diff == minDiff && Math.abs(arr[j] - arr[i]) > (result.get(1) - result.get(0))) {
                result = List.of(arr[i], arr[j]);
            }

            if (sum > target) {
                j--;
            } else if (sum < target) {
                i++;
            } else {
                break;
            }

        }

        return result;
    }
}

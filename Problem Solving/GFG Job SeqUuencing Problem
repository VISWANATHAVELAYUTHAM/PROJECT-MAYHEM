class Solution {
    
    class pair implements Comparable<pair>{
		int x;
		int y;
		
		public pair(int x, int y) {
			this.x=x;
			this.y=y;
		}
		public int compareTo(pair o) {
			return o.y-this.y;
		}
	}

    public ArrayList<Integer> jobSequencing(int[] deadline, int[] profit) {
        int size=0;
        for(int a: deadline)size=Math.max(a, size);   	
        int maxday[]=new int[size+1];
        
        pair arr[]=new pair[deadline.length];
        
        for(int i=0;i<deadline.length;i++) 
        	arr[i]=new pair(deadline[i], profit[i]);
        
        Arrays.sort(arr);
    
        
        int ind=1;
        int maxProfit=arr[0].y;
        int noOfJob=1;
        maxday[arr[0].x]=1;
        while(ind<deadline.length) {
        	int k=arr[ind].x;
        	for(int j=k;j>0;j--) {
        		if(maxday[j]!=1) {
        			maxday[j]=1;
        			noOfJob++;
        			maxProfit+=arr[ind].y;
        			break;
        		}
        	}
        	ind++;
        }
        
    	ArrayList<Integer> ans=new ArrayList<>();
    	ans.add(noOfJob);
    	ans.add(maxProfit);
    	return ans;
        
    }
}

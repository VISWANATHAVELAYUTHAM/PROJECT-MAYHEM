class Solution {
    public int areaOfMaxDiagonal(int[][] dimensions) {
        // Get the number of rectangles
        int n = dimensions.length;

        // Initialize variables to keep track of maximum area and diagonal
        int maxArea = 0;
        int maxDiag = 0;

        // Iterate through each rectangle
        for (int i = 0; i < n; i++) {
            // Get the length and width of the current rectangle
            int l = dimensions[i][0];
            int w = dimensions[i][1];

            // Calculate the square of the diagonal length
            int currDiag = l * l + w * w;

            // Compare the current diagonal with the maximum diagonal encountered so far
            // If the current diagonal is greater, or if it's equal but the area is greater,
            // update maxDiag and maxArea accordingly
            if (currDiag > maxDiag || (currDiag == maxDiag && l * w > maxArea)) {
                maxDiag = currDiag;
                maxArea = l * w;
            }
        }

        // Return the maximum area of the rectangle with the longest diagonal
        return maxArea;
    }
}

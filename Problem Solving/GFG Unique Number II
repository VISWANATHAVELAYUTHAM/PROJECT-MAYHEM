class Solution {
    public int[] singleNum(int[] nums) {
        // Step 1: XOR all numbers to get xor = a ^ b (where a and b are the two unique numbers)
        int xor = 0;
        for (int num : nums) {
            xor ^= num;
        }

        // Step 2: Find the rightmost set bit (where a and b differ)
        int differingBit = xor & -xor;

        // Step 3: Split numbers into two groups and XOR separately
        int unique1 = 0, unique2 = 0;
        for (int num : nums) {
            if ((num & differingBit) == 0) {
                unique1 ^= num;  // group where the differing bit is 0
            } else {
                unique2 ^= num;  // group where the differing bit is 1
            }
        }

        // Step 4: Store result in an array and sort it
        int[] result = new int[]{unique1, unique2};
        Arrays.sort(result);
        return result;
    }
}

import java.util.*;

public class Solution {
    static int[] acmTeam(String[] topic) {
        int n = topic.length;
        int m = topic[0].length();
        
        int maxTopics = 0;
        int maxTeams = 0;
        
        // Iterate over all pairs of attendees
        for (int i = 0; i < n - 1; i++) {
            for (int j = i + 1; j < n; j++) {
                int topicsKnown = 0;
                
                // Calculate the number of topics known by the pair using bitwise OR operation
                for (int k = 0; k < m; k++) {
                    if (topic[i].charAt(k) == '1' || topic[j].charAt(k) == '1') {
                        topicsKnown++;
                    }
                }
                
                // Update maxTopics and maxTeams if necessary
                if (topicsKnown > maxTopics) {
                    maxTopics = topicsKnown;
                    maxTeams = 1;
                } else if (topicsKnown == maxTopics) {
                    maxTeams++;
                }
            }
        }
        
        return new int[] {maxTopics, maxTeams};
    }

    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        // Read inputs
        int n = scanner.nextInt();
        int m = scanner.nextInt();

        // Read topics known by each attendee
        String[] topic = new String[n];
        for (int i = 0; i < n; i++) {
            topic[i] = scanner.next();
        }

        // Call the acmTeam function and print the result
        int[] result = acmTeam(topic);
        for (int i : result) {
            System.out.println(i);
        }

        scanner.close();
    }
}

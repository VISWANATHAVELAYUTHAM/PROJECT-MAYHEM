class Solution {
    public ArrayList<ArrayList<Integer>> kSmallestPair(int[] arr1, int[] arr2, int k) {
        // code here
        ArrayList<ArrayList<Integer>> res = new ArrayList<>();
        
        if(arr1 == null || arr1.length == 0 || arr2 == null || arr2.length ==0||k==0) return res;
        
        PriorityQueue<int[]> minHeap = new PriorityQueue<>((a,b) -> a[0]-b[0]);
        
        for(int i=0;i<arr1.length && i<k;i++){
            minHeap.offer(new int[]{arr1[i]+arr2[0],i,0});
        }
        
        while(k>0 && !minHeap.isEmpty()){
            int[] current = minHeap.poll();
            int sum = current[0];
            int i = current[1];
            int j = current[2];
            
           ArrayList<Integer> pair = new ArrayList<>();
            pair.add(arr1[i]);
            pair.add(arr2[j]);
            res.add(pair);
            k--;
        if(j+1<arr2.length){
            minHeap.offer(new int[]{arr1[i]+arr2[j+1],i,j+1});
        }
        }
        return res;
    }
}

class Solution {
    static void replaceWithNextGreatest(int[] arr) {
        int n = arr.length;
        if (n == 0) return; // Handle empty array case

        // Start with the last element
        int maxFromRight = arr[n - 1];
        arr[n - 1] = -1; // The last element is always replaced by -1

        // Traverse the array from second last element to the first element
        for (int i = n - 2; i >= 0; i--) {
            int current = arr[i];
            arr[i] = maxFromRight; // Replace current element with the greatest element on its right
            if (current > maxFromRight) {
                maxFromRight = current; // Update maxFromRight if the current element is greater
            }
        }
    }

    public static void main(String[] args) {
        int[] arr = {16, 17, 4, 3, 5, 2};
        replaceWithNextGreatest(arr);
        // Print the modified array
        for (int num : arr) {
            System.out.print(num + " ");
        }
    }
}
